/*
 * MLAPluginConfigPanel.java
 *
 * Created on __DATE__, __TIME__
 */

package edu.cmu.side.ui.configpanel;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.SortedMap;

import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

import se.datadosen.component.RiverLayout;

import com.mysterion.xml.XMLBoss;
import com.yerihyo.yeritools.swing.SwingToolkit;
import com.yerihyo.yeritools.swing.SwingToolkit.TestFrame;
import com.yerihyo.yeritools.text.StringToolkit;

import edu.cmu.side.SIDEToolkit;
import edu.cmu.side.dataitem.TrainingResult;

/**
 * 
 * @author __USER__
 */
public class TrainingResultViewPanel extends javax.swing.JPanel {

	private static final long serialVersionUID = 1L;

	private TrainingResult trainingResult;


	public TrainingResult getTrainingResult() {
		return trainingResult;
	}

	public void setTrainingResult(TrainingResult trainingResult) {
		this.trainingResult = trainingResult;
		
		if(trainingResult==null){
//			Thread.dumpStack();
			return;
		}
		
		this.label.setText("training result of... "+trainingResult.getDisplayText());
		this.refresh();
	}

	/** Creates new form MLAPluginConfigPanel */
	public TrainingResultViewPanel() {
		yeriInit();
	}

	private ActionListener trainSettingComboBoxListener = new ActionListener() {
		@Override
		public void actionPerformed(ActionEvent e) {
			refresh();
		}
	};

	private void yeriInit() {
		this.setLayout(new RiverLayout());
		
		
		label = new JLabel();
		this.add("hfill", label);
		
		trainSettingComboBox = new JComboBox();
		this.add("br hfill", trainSettingComboBox);
		
		evaluationTextArea = new JTextArea();
		scrollPane = new JScrollPane(evaluationTextArea);
		this.add("br hfill vfill", scrollPane);
		
		this.trainSettingComboBox.addActionListener(trainSettingComboBoxListener);
		this.refresh();
	}

	public void refresh() {
		trainSettingComboBox.removeActionListener(trainSettingComboBoxListener);
		if (this.trainingResult==null) {
			trainSettingComboBox.removeAllItems();
			evaluationTextArea.setText("");
			
			trainSettingComboBox.addActionListener(trainSettingComboBoxListener);
			return;
		}

		SortedMap<String,String> trainSettingDescription = this.trainingResult.getTrainSettingDescription();
		String selectedItem = (String) this.trainSettingComboBox
				.getSelectedItem();

		this.trainSettingComboBox.removeAllItems();
		if (trainSettingDescription != null) {
			this.trainSettingComboBox.addItem("All");
			for (String key : trainSettingDescription.keySet()) {
				this.trainSettingComboBox.addItem(key);
			}
		}
		this.trainSettingComboBox.setSelectedItem(selectedItem);

		int selectedIndex = trainSettingComboBox.getSelectedIndex();
		if (selectedIndex < 0 && trainSettingComboBox.getItemCount() > 0) {
			selectedIndex = 0;
			this.trainSettingComboBox.setSelectedIndex(selectedIndex);
		}

		if (selectedIndex >= 0 && trainSettingDescription != null) {
			String content = null;
			if (selectedIndex == 0) {
				StringBuilder builder = new StringBuilder();
				for (String key : trainSettingDescription.keySet()) {
					builder.append("***** ").append(key).append(" *****")
							.append(StringToolkit.newLine());
					builder.append(trainSettingDescription.get(key)).append(StringToolkit.newLine())
							.append(StringToolkit.newLine());
				}
				content = builder.toString();
			} else {
				content = trainSettingDescription.get(selectedItem);
			}
			evaluationTextArea.setText(content);
			evaluationTextArea.setCaretPosition(0);
		}

		SwingToolkit.adjustScrollBar(scrollPane, JScrollBar.VERTICAL);
		
		trainSettingComboBox.addActionListener(trainSettingComboBoxListener);
	}

	public static void main(String[] args) throws FileNotFoundException, IOException {
		TrainingResultViewPanel trainingResultViewPanel = new TrainingResultViewPanel();
		
		File trFile = new File(SIDEToolkit.modelFolder, "20090416_165757.xml");
		TrainingResult trainingResult = TrainingResult.create(XMLBoss.XMLFromFile(trFile).getDocumentElement());
		trainingResultViewPanel.setTrainingResult(trainingResult);
		
		TestFrame testFrame = new TestFrame(trainingResultViewPanel);
		testFrame.setSize(new Dimension(800, 600));
		testFrame.showFrame();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
//	private void initComponents() {
//
//		jLabel1 = new javax.swing.JLabel();
//		trainingResultSlider = new javax.swing.JSlider();
//		trainSettingComboBox = new javax.swing.JComboBox();
//		jScrollPane2 = new javax.swing.JScrollPane();
//		evaluationTextArea = new javax.swing.JTextArea();
//
//		jLabel1.setText("Running analysis:");
//
//		trainingResultSlider.setOrientation(javax.swing.JSlider.VERTICAL);
//		trainingResultSlider.setPaintLabels(true);
//		trainingResultSlider.setPaintTicks(true);
//		trainingResultSlider.setSnapToTicks(true);
//
//		evaluationTextArea.setColumns(20);
//		evaluationTextArea.setRows(2);
//		jScrollPane2.setViewportView(evaluationTextArea);
//
//		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
//		this.setLayout(layout);
//		layout
//				.setHorizontalGroup(layout
//						.createParallelGroup(
//								javax.swing.GroupLayout.Alignment.LEADING)
//						.addGroup(
//								layout
//										.createSequentialGroup()
//										.addContainerGap()
//										.addGroup(
//												layout
//														.createParallelGroup(
//																javax.swing.GroupLayout.Alignment.LEADING)
//														.addComponent(
//																jScrollPane2,
//																javax.swing.GroupLayout.DEFAULT_SIZE,
//																189,
//																Short.MAX_VALUE)
//														.addGroup(
//																layout
//																		.createSequentialGroup()
//																		.addComponent(
//																				jLabel1)
//																		.addPreferredGap(
//																				javax.swing.LayoutStyle.ComponentPlacement.RELATED))
//														.addComponent(
//																trainSettingComboBox,
//																0, 189,
//																Short.MAX_VALUE))
//										.addGap(8, 8, 8)
//										.addComponent(
//												trainingResultSlider,
//												javax.swing.GroupLayout.PREFERRED_SIZE,
//												javax.swing.GroupLayout.DEFAULT_SIZE,
//												javax.swing.GroupLayout.PREFERRED_SIZE)
//										.addContainerGap()));
//		layout
//				.setVerticalGroup(layout
//						.createParallelGroup(
//								javax.swing.GroupLayout.Alignment.LEADING)
//						.addGroup(
//								layout
//										.createSequentialGroup()
//										.addContainerGap()
//										.addComponent(jLabel1)
//										.addPreferredGap(
//												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//										.addGroup(
//												layout
//														.createParallelGroup(
//																javax.swing.GroupLayout.Alignment.LEADING)
//														.addComponent(
//																trainingResultSlider,
//																javax.swing.GroupLayout.DEFAULT_SIZE,
//																146,
//																Short.MAX_VALUE)
//														.addGroup(
//																layout
//																		.createSequentialGroup()
//																		.addComponent(
//																				trainSettingComboBox,
//																				javax.swing.GroupLayout.PREFERRED_SIZE,
//																				javax.swing.GroupLayout.DEFAULT_SIZE,
//																				javax.swing.GroupLayout.PREFERRED_SIZE)
//																		.addPreferredGap(
//																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//																		.addComponent(
//																				jScrollPane2,
//																				javax.swing.GroupLayout.DEFAULT_SIZE,
//																				118,
//																				Short.MAX_VALUE)))
//										.addContainerGap()));
//	}// </editor-fold>
	//GEN-END:initComponents

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JTextArea evaluationTextArea;
	private javax.swing.JScrollPane scrollPane;
	private javax.swing.JComboBox trainSettingComboBox;
	private JLabel label;
	// End of variables declaration//GEN-END:variables

	private static int actionEventID = 1;
	private List<ActionListener> actionListenerList = new ArrayList<ActionListener>();

	public void addActionListener(ActionListener actionListener) {
		actionListenerList.add(actionListener);
	}

	public void removeActionListener(ActionListener actionListener) {
		actionListenerList.remove(actionListener);
	}

	protected void fireActionEvent() {
		ActionEvent actionEvent = new ActionEvent(this, actionEventID, "train");
		for (ActionListener actionListener : actionListenerList) {
			actionListener.actionPerformed(actionEvent);
		}
	}
}